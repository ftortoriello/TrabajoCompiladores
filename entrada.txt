# Utilizar cortocircuito sólo en condiciones de estructuras
# Convertir for --> while en el propio parser.

# ====================
# La conversión de parámetros por defecto no estaba funcionando
{
function inc(num is integer, inc is integer = 1.0) return integer
    return num + inc;

main is
    writeln(inc(9.0));
end.
}
# ====================

# ====================
# La instrucción for no funcionaba en los casos en los que la variable a iterar debe decrementarse
# La sentencia continue saltaba al cuerpo del while o for en vez de evaluar la condición
{
main is
    variable i is integer;
    for i = 5 to 1 do begin
        writeln(i);
        if i == 1 then continue;
    end;
end.
}
# ====================

# ====================
# Los break y continue anidados no funcionaban
{
main is
    variable i is integer = 0;

    while true do begin
        i = i + 1;
        while true do begin
            if i == 1 or i == 3 or i == 5 then begin
                write(i);
                writeln(". Esto tendría que aparecer tres veces");
            end;
            break;
        end;
        if i == 5 then break;
    end;
end.
}
# ====================


# ====================
# Pruebas cortocircuito

main is
    variable x is integer = 0;
    variable y is integer = 2;
    variable z is integer = 5;

    if (x != 0) and (y != 2) or (z == 5) then
        writeln(true);

    while x < z and not(z < y) or not(z == 5) and z != 0 do begin
        writeln(x);
        x = x + 1;
    end;

    if not(x < z) and not(y > z) and not(z == 5) then
        writeln(true)
    else
        writeln(false);

    while not(x < 1) do begin
        x = x - 1;
        writeln(x);
    end;
end.

# ====================
